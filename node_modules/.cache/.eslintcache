[{"D:\\React\\covid\\src\\index.js":"1","D:\\React\\covid\\src\\App.js":"2","D:\\React\\covid\\src\\components\\StatewiseData.jsx":"3","D:\\React\\covid\\src\\components\\Countries.jsx":"4","D:\\React\\covid\\src\\components\\Navbar.jsx":"5","D:\\React\\covid\\src\\components\\Home.jsx":"6","D:\\React\\covid\\src\\components\\Region.jsx":"7","D:\\React\\covid\\src\\components\\Search.jsx":"8","D:\\React\\covid\\src\\components\\Card.jsx":"9"},{"size":181,"mtime":1675505571126,"results":"10","hashOfConfig":"11"},{"size":955,"mtime":1675932883957,"results":"12","hashOfConfig":"11"},{"size":1878,"mtime":1675848920754,"results":"13","hashOfConfig":"11"},{"size":2440,"mtime":1675925212803,"results":"14","hashOfConfig":"11"},{"size":1921,"mtime":1675932333965,"results":"15","hashOfConfig":"11"},{"size":3799,"mtime":1675849706916,"results":"16","hashOfConfig":"11"},{"size":2544,"mtime":1675850332943,"results":"17","hashOfConfig":"11"},{"size":2095,"mtime":1675848812030,"results":"18","hashOfConfig":"11"},{"size":801,"mtime":1675868012697,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1t1tkmt",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"D:\\React\\covid\\src\\index.js",[],[],[],"D:\\React\\covid\\src\\App.js",["52"],[],"import React from 'react'\nimport StatewiseData from './components/StatewiseData'\nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from './components/Navbar'\nimport {BrowserRouter, Routes, Route, Navigate} from 'react-router-dom'\nimport Home from './components/Home'\nimport Search from './components/Search'\nimport Region from './components/Region'\nimport Countries from './components/Countries'\n\n\nconst App = () => {\n  return (\n    <>\n     <BrowserRouter>\n      <Navbar />\n        <Routes>\n          <Route path='/' element={<Navigate to='/home'/>} />\n          <Route path='/home' element={<Home />} /> \n          <Route path='/countries' element={<Countries/> }/>\n          <Route path='/region' element={<Region /> }/>\n          <Route path='/state' element={<StatewiseData /> }/>\n          <Route path='/search' element={<Search /> }/>\n        </Routes>\n     </BrowserRouter>\n    </>\n  )\n}\n\nexport default App","D:\\React\\covid\\src\\components\\StatewiseData.jsx",[],[],"D:\\React\\covid\\src\\components\\Countries.jsx",["53"],[],"import React,{useState, useEffect} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from './Card';\r\nimport { CardGroup } from 'react-bootstrap';\r\n\r\nconst Countries = () => {\r\n\r\nconst [countries, setCountries] = useState([]);\r\nconst [country, setCountry] = useState('worldwide');\r\nconst [countryInfo, setCountryInfo] = useState({})\r\n\r\nuseEffect (()=>{\r\nconst getData = async () =>{\r\nawait fetch('https://disease.sh/v3/covid-19/countries')\r\n.then(res=>res.json())\r\n.then( data => {\r\nconst countries = data.map(item=>(\r\n{\r\nname : item.country,\r\nvalue: item.countryInfo.iso2,\r\nindex: item.index+1\r\n}\r\n))\r\nsetCountries(countries)\r\n})\r\n}\r\ngetData()\r\n},[])\r\n\r\nuseEffect(() => {\r\n\r\nfetch(\"https://disease.sh/v3/covid-19/all\")\r\n.then(res=>res.json())\r\n.then(data => setCountryInfo(data))\r\n}, [])\r\n\r\nconst onCountryChange = async e =>{\r\nconst url = e.target.value == 'worldwide' ? `https://disease.sh/v3/covid-19/all` :\r\n`https://disease.sh/v3/covid-19/countries/${e.target.value}`\r\n\r\nawait fetch(url)\r\n.then(res=>res.json())\r\n.then(data=>{\r\nsetCountry(e.target.value);\r\nsetCountryInfo(data)\r\n})\r\n\r\n}\r\nconst date = new Date(parseInt(countryInfo.updated));\r\nconst lastupdated = date.toString();\r\nreturn (\r\n<>\r\n\r\n  <h4 className='d-flex justify-content-center fw-bold mt-4'>List of all countries across Worldwide</h4>\r\n  <div className='container-fluid p-3 d-flex justify-content-center'>\r\n\r\n    <Form.Select value={country.name} onChange={onCountryChange} className=\"w-50 \">\r\n      <option value=\"worldwide\">worldwide</option>\r\n      {countries.map(country => <option value={country.value}> {country.name}\r\n      </option>)}\r\n\r\n    </Form.Select>\r\n  </div>\r\n\r\n  <CardGroup>\r\n    <div className='container fluid responsive'>\r\n      <Card title={\"Confirmed\"} text={countryInfo.cases} icon={ <i className='fa-solid fa-virus-covid fa-4x' style={{color:\"red\"}} /> } status={lastupdated} />\r\n      <Card title={\"Active\"} text={countryInfo.active} status={lastupdated} icon={<i className='fa-solid fa-chart-line fa-4x' style={{color:\"orange\"}} />}/>\r\n      <Card title={\"Fatalities\"} text={countryInfo.deaths} icon={<i className='fa-solid fa-skull fa-4x' style={{color:\"Black\"}} />} status={lastupdated} />\r\n      <Card title={\"Recovered\"} text={countryInfo.recovered} icon={<i className='fa-solid fa-heart-pulse fa-4x'style={{color:\"green\"}} />} status={lastupdated} />\r\n    </div>\r\n  </CardGroup>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default Countries","D:\\React\\covid\\src\\components\\Navbar.jsx",["54"],[],"D:\\React\\covid\\src\\components\\Home.jsx",["55"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport CountUp from 'react-countup';\r\nimport Card from './Card';\r\nimport { CardGroup } from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n\r\nconst [data, setData] = useState([]);\r\nconst [result, setResult] = useState([]);\r\nconst [searchCountries, setSearchCountries] = useState(\"\");\r\n\r\nuseEffect (()=>{\r\naxios\r\n.all([\r\naxios.get('https://disease.sh/v3/covid-19/all'),\r\naxios.get('https://disease.sh/v3/covid-19/countries'),\r\n])\r\n.then( res => {\r\nsetData(res[0].data);\r\nsetResult(res[1].data);\r\n})\r\n.catch(err=>{\r\nconsole.log(err);\r\n})\r\n},[])\r\n\r\nconst date = new Date(parseInt(data.updated));\r\nconst lastupdated = date.toString();\r\n\r\nconst filterCountries = result.filter(item =>{\r\nreturn searchCountries !==\"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item\r\n});\r\n\r\n\r\nreturn (\r\n<>\r\n\r\n  <header id=\"contents\">\r\n    <div className=\"welcome\">\r\n      <div className=\" container-fluid p-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-sm-lg-12\">\r\n            <h5 className='text-center fw-bold '>Globally, <span style={{color:\"blue\"}}></span> there have been {\r\n              <CountUp start={data.cases} separator=\",\" style={{color:\"blue\"}} />} confirmed cases of COVID-19,\r\n              including {\r\n              <CountUp start={data.deaths} separator=\",\" style={{color:\"blue\"}} />} deaths, reported to WHO.\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n  \r\n\r\n<CardGroup>\r\n    <div className='container fluid responsive'>\r\n      <Card title={\"Confirmed\"} text={data.cases} icon={ <i className='fa-solid fa-virus-covid fa-4x' style={{color:\"red\"}} /> } status={lastupdated}  />\r\n      <Card title={\"Active\"} text={data.active} status={lastupdated} icon={<i className='fa-solid fa-chart-line fa-4x' style={{color:\"orange\"}} />}/>\r\n      <Card title={\"Fatalities\"} text={data.deaths} icon={<i className='fa-solid fa-skull fa-4x' style={{color:\"Black\"}}/>} status={lastupdated} />\r\n      <Card title={\"Recovered\"} text={data.recovered} icon={<i className='fa-solid fa-heart-pulse fa-4x' style={{color:\"green\"}} />} status={lastupdated} />\r\n    </div>\r\n</CardGroup>\r\n\r\n\r\n  <section>\r\n   <div className='container-fluid mt-2 '>\r\n    <Form className='d-flex justify-content-center p-2 '>\r\n        <Form.Group className=\" mb-3 row\" controlId=\"formGroupSearch\">\r\n          <Form.Control className='col-sm-10' type=\"text\" autoComplete='off' placeholder=\"Search by country\"\r\n            onChange={e=>\r\n            setSearchCountries(e.target.value)}\r\n            />\r\n        </Form.Group>\r\n      </Form>\r\n     <table className='table responsive table-striped table-active'>\r\n      <thead className='bg-dark text-white fw-bolder sticky-top'>\r\n        <tr>\r\n          <th>S.N</th>\r\n          <th>Flag</th>\r\n          <th>Country</th>\r\n          <th>Total</th>\r\n          <th>Active</th>\r\n          <th>Today Case</th>\r\n          <th>Critical</th>\r\n          <th>Deaths</th>\r\n          <th>Recovered</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { filterCountries.map((data, i)=>{\r\n        return(\r\n        <tr key={i}>\r\n          <td>{i+1}</td>\r\n          <td>\r\n            <img src={data.countryInfo.flag} height={\"30px\"} width={\"50px\"} />\r\n          </td>\r\n          <td>{data.country}</td>\r\n          <td>{data.cases}</td>\r\n          <td>{data.active}</td>\r\n          <td>{data.todayCases} </td>\r\n          <td>{data.critical}</td>\r\n          <td>{data.deaths}</td>\r\n          <td>{data.recovered}</td>\r\n        </tr>\r\n        )\r\n        }) }\r\n      </tbody>\r\n    </table>\r\n   </div>\r\n  </section>\r\n</>\r\n\r\n)\r\n}\r\n\r\n\r\nexport default Home","D:\\React\\covid\\src\\components\\Region.jsx",[],[],"D:\\React\\covid\\src\\components\\Search.jsx",["56"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\n\r\nconst Search = () => {\r\n\r\nconst [data, setData] = useState([]);\r\nconst [result, setResult] = useState([]);\r\nconst [searchCountries, setSearchCountries] = useState(\"\");\r\n\r\n\r\nuseEffect (()=>{\r\naxios\r\n.all([\r\naxios.get('https://disease.sh/v3/covid-19/all'),\r\naxios.get('https://disease.sh/v3/covid-19/countries'),\r\n])\r\n.then( res => {\r\nsetData(res[0].data);\r\nsetResult(res[1].data);\r\n})\r\n.catch(err=>{\r\nconsole.log(err);\r\n})\r\n},[])\r\n\r\nconst filterCountries = result.filter(item =>{\r\nreturn searchCountries !==\"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\r\n});\r\n\r\nconst countries = filterCountries.map((data, i)=>{\r\nreturn (\r\n<div>\r\n  <div className=' card col-md-lg-4 bg-light text-dark text-center m-2 ' key={i} height={\"100%\"} width={'auto'}>\r\n    <Card.Img variant='top' src={data.countryInfo.flag} />\r\n    <div className='card-body'>\r\n      <div className='card-title fw-bold'> {data.country} </div>\r\n      <div className='card-text'>Deaths {data.deaths}</div>\r\n      <div className='card-text'>Recovered {data.recovered}</div>\r\n      <div className='card-text'>Today's cases {data.todayCases}</div>\r\n      <div className='card-text'>Active {data.active}</div>\r\n      <div className='card-text'>Critical {data.critical}</div>\r\n      <div className='card-text'>Cases {data.cases}</div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n)\r\n})\r\n\r\nreturn (\r\n<>\r\n\r\n  <section>\r\n    <Form className='d-flex justify-content-center p-5 '>\r\n      <Form.Group className=\"  row\" controlId=\"formGroupSearch\">\r\n        <Form.Control className='col-sm-10' type=\"text\" autoComplete='off' placeholder=\"Search by country\" onChange={e=>\r\n          setSearchCountries(e.target.value)}\r\n          />\r\n      </Form.Group>\r\n    </Form>\r\n\r\n \r\n\r\n<CardGroup>{countries}</CardGroup>\r\n  </section>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search","D:\\React\\covid\\src\\components\\Card.jsx",[],[],{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":38,"column":28,"nodeType":"63","messageId":"64","endLine":38,"endColumn":30},{"ruleId":"65","severity":1,"message":"66","line":10,"column":5,"nodeType":"67","endLine":10,"endColumn":67},{"ruleId":"68","severity":1,"message":"69","line":100,"column":13,"nodeType":"67","endLine":100,"endColumn":79},{"ruleId":"57","severity":1,"message":"70","line":11,"column":8,"nodeType":"59","messageId":"60","endLine":11,"endColumn":12},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'data' is assigned a value but never used."]